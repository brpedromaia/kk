#!/bin/bash


apply(){

  local KK_CLUSTER_PLAN=$1

  validation $KK_CLUSTER_PLAN
  [ "$?" == "1" ] && yq -i ".cluster.bootstrap.nginx.apply.status = \"failed\"" $KK_CLUSTER_PLAN && return 1
  
  KK_CLUSTER_INGRESS_FILE="${KK_CLUSTER_PLAN%/*}/bootstrap/cluster-ingress.yml"
  mkdir -p "${KK_CLUSTER_INGRESS_FILE%/*}"

  curl -sLo $KK_CLUSTER_INGRESS_FILE https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.8.0/deploy/static/provider/kind/deploy.yaml
  sed -i '/^        - --publish-status-address=localhost.*/a\        - --enable-ssl-passthrough' $KK_CLUSTER_INGRESS_FILE

  kubectl apply -f $KK_CLUSTER_INGRESS_FILE &> /dev/null

  kubectl wait --namespace ingress-nginx \
    --for=condition=ready pod \
    --selector=app.kubernetes.io/component=controller \
    --timeout=180s &> /dev/null

  return 0

}


validation(){

  local KK_FILE=$1
  local KK_REQ_FIELDS=(cluster.bootstrap.nginx.enabled)
  local KK_REQ_ERROR=""

  [ ! -f "$KK_FILE" ] && KK_REQ_ERROR="File not found: $KK_FILE"

  for KK_REQ_FIELD in ${KK_REQ_FIELDS[@]};do
    [ "$(yq .$KK_REQ_FIELD $KK_FILE)" == "null" ] && KK_REQ_ERROR="Field $KK_REQ_FIELD is REQUIRED\n"
  done

  [ "$KK_REQ_ERROR" != "" ] && echo -e "$KK_REQ_ERROR" && return 1

  return 0
  
}


bootstrap(){

  yq -i ".cluster.bootstrap.nginx.apply.started = \"$(date +%F_%T)\"" $1

  validation $1
  [ "$?" == "1" ] && yq -i ".cluster.bootstrap.nginx.apply.status = \"failed before apply\"" $1 && return 1
  yq -i ".cluster.bootstrap.nginx.apply.validated = \"$(date +%F_%T)\"" $1

  echo "Setting Nginx Cluster Ingress..."
  apply $1
  [ "$?" == "1" ] && yq -i ".cluster.bootstrap.nginx.apply.status = \"failed after apply\"" $1 && return 1
  yq -i ".cluster.bootstrap.nginx.apply.finished = \"$(date +%F_%T)\"" $1

}


$@